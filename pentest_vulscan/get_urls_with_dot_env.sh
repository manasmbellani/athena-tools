#!/bin/bash
# 
# Script to get the list of URLs that have a .env file exposed which 
# tends to reveal sensitive info eg environment variables about the website itself
# 
# Based on: 
#     https://github.com/ucb-bar/chipyard/blob/master/vlsi/env.yml
#   
if [ $# -lt 1 ]; then
    echo "[-] ...<urls>... | $0 run [verbose=0]"
    exit 1
fi
verbose=${2:-"0"}

# Get list of all URLs
urls=$(cat -)

# Get the current script directory that we are working in
script_dir=$(dirname $0)

# Loop through each URL
IFS=$'\n'
for url in $urls; do
    if [ ! -z "$url" ]; then
        
        # Get the URL upto the directory path
        url_dir=$(echo "$url" | "$script_dir"/get_url_parts.sh "url_dir")

        # Regex to use to identify vulnerable sites
        regex="HTTP/1.1 20.*(text/yaml|text/x-yaml|application/yaml|\
application/x-yaml)"

        # Run the tests on the various file paths
        url_to_test="$url_dir/.env"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
            "$regex" "$verbose"

        url_to_test="$url_dir/.env.yml"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
            "$regex" "$verbose"

        url_to_test="$url_dir/.env.yaml"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
            "$regex" "$verbose"

        url_to_test="$url_dir/env"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
            "$regex" "$verbose"

        url_to_test="$url_dir/env.yml"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
            "$regex" "$verbose"

        url_to_test="$url_dir/env.yaml"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
            "$regex" "$verbose"
    fi
done
