#!/bin/bash
#
# Script determines the HTTP paths for a given URL list using a variety of tools
# 
# Uses 'anew' to add new things to the output file itself which can be downloaded
# via `go get -u github.com/tomnomnom/anew`
#

# User agent string
USER_AGENT="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36"

if [ $# -lt 1 ]; then
    echo "[-] cat ...<target|port|proto>... | $0 run [method=dirsearch|gobuster|all] \
[custom-wordlist-for-gobuster=''] [recursive=1] [outfile-prefix=out-webpaths]"
    exit 1
fi
method=${2:-"all"}
custom_wordlist=${3:-""}
outfile_prefix=${4:-"out-webpaths"}
recursions=${5:-"1"}

# Get list of target/port/protocol from user
combos=$(cat -)

# Script directory
script_dir=$(dirname "$0")

# Loop through each combination and identify all SSH hosts
IFS=$'\n'
for combo in $combos; do

    if [ ! -z "$combo" ]; then

        # Prepare the output file for this target/port
        outfile=$(echo "$combo" | \
            $script_dir/invoke_cmd_on_target.sh "echo $outfile_prefix-TARGET-PORT.txt")

        # Clear outfile if it already exists
        [ -f "$outfile" ] && touch "$outfile"

        # Add a line 
        echo "$combo" | \
                        $script_dir/invoke_cmd_on_target.sh "echo \
PROTOCOL://TARGET:PORT > $outfile"
        
        for recurse_index in $(seq 1 $recursions); do
            while read url; do
                if [ "$method" == "dirsearch" ] || [ "$method" == "all" ]; then

                    # Get the directory path to brute-force
                    dir_path=$(echo "$url" | get_url_parts.sh "dir")

                    # Run dirsearch, and also extract the results to the out file 
                    echo "$combo" | \
                        $script_dir/invoke_cmd_on_target.sh "python3 \
/opt/dirsearch/dirsearch.py -x 400,401,403 -F -u $dir_path -E \
--ua \"$USER_AGENT\" --plain-text-report /tmp/out-dirsearch-TARGET-PORT-raw.txt; \
cat /tmp/out-dirsearch-TARGET-PORT-raw.txt | tr -s '  ' ' ' | cut -d' ' -f3 > /tmp/out-dirsearch-TARGET-PORT.txt; \
cat /tmp/out-dirsearch-TARGET-PORT.txt | ~/go/bin/anew $outfile; \
rm /tmp/out-dirsearch-TARGET-PORT.txt /tmp/out-dirsearch-TARGET-PORT-raw.txt; " 1>/dev/null
                fi

                if [ "$method" == "gobuster" ] || [ "$method" == "all" ]; then

                    # Get the custom wordlist
                    if [ -z "$custom_wordlist" ]; then
                        echo "[-] Gobuster requires wordlist to run" 1>&2
                    else
                        # Run gobuster, and also extract ALL results to output file 
                        echo "$combo" | \
                            $script_dir/invoke_cmd_on_target.sh "~/go/bin/gobuster \
dir -u $dir_path -t 50 -w $custom_wordlist -o /tmp/out-gobuster-TARGET-PORT-raw.txt; \
cat /tmp/out-gobuster-TARGET-PORT-raw.txt | tr -s '  ' ' ' | cut -d' ' -f1 > /tmp/out-gobuster-TARGET-PORT.txt; \
cat /tmp/out-gobuster-TARGET-PORT.txt | xargs -I [] echo 'PROTOCOL://TARGET:PORT[]' | ~/go/bin/anew $outfile; \
rm /tmp/out-gobuster-TARGET-PORT.txt /tmp/out-gobuster-TARGET-PORT-raw.txt;" 1>/dev/null
                    fi
                fi
            done < "$outfile"
        done
    fi
done