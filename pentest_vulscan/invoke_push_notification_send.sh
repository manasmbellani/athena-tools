#!/bin/bash
# 
# Script sends a push notification to multiple locations typically to file and 
# slack. The line filter is used to determine where to send the notification.
# 
# Args:
#     methods: Methods to use for sending notification. E.g. by slack, file.
#         Required.
#     prefix_msg: Message to prefix. Required.
#     logfile: logfile to write the results to. By default, out-log.txt
#      
# Input: 
#     Input set of lines to filter
#  
# Output:
#     Same as Input
# 
 
if [ $# -lt 1 ]; then
    echo "...<log lines>... | $0 <prefix_msg> [methods=slack,file] \
[logfile='out-log.txt']"
    exit 1
fi
prefix_msg="${1}"
method=${2:-"slack,file"}
logfile=${3:-"out-log.txt"}

log_lines=$(cat -)

IFS=$'\n'
for line in $log_lines; do

    # Skip empty lines
    if [ ! -z "$line" ]; then
        
        # Prepare the line to send
        log_line_to_send="[+] $prefix_msg: $line"

        # Should message be sent to slack
        send_to_file=$(echo "$method" | grep -i "file")
        if [ ! -z "$send_to_file" ]; then
            echo "$date: $log_line_to_send" >> "$logfile"
        fi

        # Should message be sent to slack
        send_to_slack=$(echo "$method" | grep -i "slack")
        if [ ! -z "$send_to_slack" ]; then
            if [ -z "$SLACK_TOKEN" ] || [ -z "$SLACK_CHANNEL_ID" ]; then
                # Load the Environment variables to see if slack token and 
                # channel ID are present 
                source ~/.bashrc
            fi

            # Send message to slack
            curl -s "https://slack.com/api/chat.postMessage" \
                -F token="${SLACK_TOKEN}" \
                -F channel="${SLACK_CHANNEL_ID}" \
                -F text="$log_line_to_send" 1>/dev/null
        fi

        # Print out the output as-is
        echo "$line"
    fi
done
