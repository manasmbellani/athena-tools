#!/bin/bash
# 
# Script to get the list of URLs that could have exposed api documentation
# Taken from: 
# 
# * /*/*/docs - https://twitter.com/akashtesla/status/1255807589163520002?s=21
# * XML WSDL Schema - Taken from: https://stackoverflow.com/questions/20742589/how-to-get-the-wsdl-file-from-a-webservices-url
# * Service Description SOAP XML documentation - Example: https://www.w3schools.com/xml/tempconvert.asmx

if [ $# -lt 1 ]; then
    echo "[-] ...<urls>... | $0 run"
    exit 1
fi

urls=$(cat -)

# Get the current script directory that we are working in
script_dir=$(dirname $0)

# Loop through each URL
IFS=$'\n'
for url in $urls; do
    if [ ! -z "$url" ]; then
        
        # Get the URL upto the directory path
        url_dir=$(echo "$url" | "$script_dir"/get_url_parts.sh "url")

        # Regex to use to identify the generic documentation
        regex_asterik_api_doco="HTTP/1.1 20"

        # Regex to use to get XML WSDL
        regex_wsdl="HTTP/1.1 20.*(application/xml|text/xml).*\
(schema|wsdl:|definition|complexType|schema)"

        # Regex to identify the service description pages
        regex_service_description="HTTP/1.1 20.*(Service Description|SOAP |Parameter)"

        url_to_test="$url_dir/*/*/docs"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_asterik_api_doco"

        url_to_test="$url?wsdl"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_wsdl"

        url_to_test="$url"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_service_description"
    fi
done
