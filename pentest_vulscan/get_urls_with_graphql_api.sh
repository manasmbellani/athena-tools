#!/bin/bash
# 
# Script to get the list of URLs that could have exposed GraphQL page
# 
if [ $# -lt 1 ]; then
    echo "[-] ...<urls>... | $0 run"
    exit 1
fi

urls=$(cat -)

# Get the current script directory that we are working in
script_dir=$(dirname $0)

# Loop through each URL
IFS=$'\n'
for url in $urls; do
    if [ ! -z "$url" ]; then
        
        # Get the URL upto the directory path
        url_dir=$(echo "$url" | "$script_dir"/get_url_parts.sh "url_dir")
        
        # Regex to use to identify Graphql UI portal
        regex_graphql="HTTP/1.1 20.*(Prettify|History|Welcome to Graphiql|Query \
Variables|graphiql-container|graphQLEndpoint|GraphQLParams)"

        url_to_test="$url_dir/graphql"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_graphql"

        url_to_test="$url_dir/graphiql"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_graphql"

        url_to_test="$url_dir/graphql-explorer"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_graphql"

        url_to_test="$url_dir/graphiql-explorer"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_graphql"

        url_to_test="$url_dir/graphql/console"
        echo "$url_to_test" | "$script_dir"/invoke_web_request_on_target.sh run \
        "$regex_graphql"  
    fi
done
