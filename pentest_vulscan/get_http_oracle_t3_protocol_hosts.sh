#!/bin/bash
# 
# Description: 
#     Get hosts which 
# 
# Typical Usage: 
#     "[-] cat ...<targets>... | ./get_running_ports_services.sh | \
#          ./get_http_oracle_t3_protocol_hosts.sh [method]
#
# Input:
#      List of targets (hostnames/IPs) that are running Oracle t3 protocol.
#      Typically, 
# 
# Args:
#    method: Method to use for getting the service banners. By default, 'netcat'
#    new_line_delimiter: Delimiter to use for new lines. By default. ';'
#    banner_request_timeout: Banner request to use in seconds. By default, 3
# 
# Output:
#     This script will output the results for each target as a CSV table, using 
#     '|' delimiter. The columns of this table are:
#         $target|$port|$protocol|$banner e.g. 
# 
# Examples:
#     To get the banner for target "132.145.92.212": 
#         echo -e "132.145.92.212" | ./get_running_ports_services.sh '' '1' '0
#      
#     To get all the open TCP/UDP ports for the target via TCP Version scan but 
#         excluding UDP scans:
#  
#         echo -e "132.145.92.212" | ./get_running_ports_services.sh '' '1' '0'
#
#     To get the running ports and services for all hosts from file \
#         '/tmp/hosts.txt'
#
#       cat /tmp/hosts.txt | ./get_running_ports_services.sh
#

DELIM="|"

# What method to use for scanning
method=${1:-"netcat"}
new_line_delim=${2:-";"}
banner_request_timeout=${3:-"3"}

# Get the information about the target
target_infos=$(cat -)

# For linux, the timeout should be in seconds
os=$(uname)
if [ "$os" == "Linux" ]; then
    banner_request_timeout=$(( $banner_request_timeout * 1000 ))
fi

IFS=$'\n'
for target_info in $target_infos; do
    if [ ! -z "$target_info" ]; then
        
        # Get the info about target, protocol and port
        target=$(echo "$target_info" | cut -d"$DELIM" -f1)
        port=$(echo "$target_info" | cut -d"$DELIM" -f2)
        proto=$(echo "$target_info" | cut -d"$DELIM" -f3) 
        
        banner=""
        if [ "$proto" == "tcp" ]; then
            if [ "$method" == "netcat" ]; then
                banner=$(echo -e "GET / HTTP/1.1\n\n\n\n\n\n" \
                    | nc -w $banner_request_timeout $target $port 2>&1 \
                    | tr -s "\r\n" "$new_line_delim")
            else
                :
            fi
        else
            if [ "$method" == "netcat" ]; then
                banner=$(echo -e "GET / HTTP/1.1\n\n\n\n\n\n" \
                    | nc -u -w $banner_request_timeout $target $port 2>&1 \
                    | tr -s "\r\n" "$new_line_delim")
            else
                :
            fi
        fi

        echo "$target$DELIM$proto$DELIM$port$DELIM$banner"
    fi
done