#!/bin/bash
#
# Invoke a web request on target/port combination and return urls OR commands
# that match the given filter criteria
# 
# 

# Delimiter to use
DELIM="|"

# Timeout for curl request
TIMEOUT="4"

# User agent string to use
USER_AGENT="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36"

if [ $# -lt 1 ]; then
    echo "[-] cat ...<urls>... | $0 run [regex_filter]"
    exit 1
fi
regex_filter="$2"

lines=$(cat -)

# Get the current script directory 
script_dir=$(dirname $0)

IFS=$'\n'
for line in $lines; do

    if [ ! -z "$line" ]; then
        # URL to assess
        url="$line"

        # Prepare the curl request
        cmd_to_exec="curl --max-time "$TIMEOUT" --http1.1 -i -i -s -A \"$USER_AGENT\" \
            -L -H \"X-Forwarded-For: 127.0.0.1\" \"$url\""

        # DEBUG: For printing the command executed
        # echo "cmd_to_exec: $cmd_to_exec"

        # Make the web request
        cmd_out=$(/bin/bash -c "$cmd_to_exec")

        # Put the entire request into a single line
        cmd_out_one_line=$(echo "$cmd_out" | tr -s "\r\n" "$DELIM")

        if [ ! -z "$regex_filter" ]; then
            # Check if it matches filter - if it does, print the URL out
            resp_matches=$(echo "$cmd_out_one_line" \
                | grep -iE "$regex_filter")

            # If response matching the regex found, then print the URL
            if [ ! -z "$resp_matches" ]; then
                echo "$url"
            fi
        else
            # Writing output for the given command
            echo "$cmd_out"
        fi
    fi
done
