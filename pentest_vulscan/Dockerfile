FROM kalilinux/kali-rolling
MAINTAINER manasbellani
WORKDIR /opt/athena-tools

# Set to a working deb sourcce - otherwise, 404 error encountered when pulling repos via apt-get
#RUN echo "deb [trusted=yes] https://http.kali.org/kali kali-rolling main contrib non-free" > /etc/apt/sources.list

# Install all the apt-gettable modules one-by-one
# Not installed packages:
#   psmisc, for  using killall
#   unixodbc-dev, for using changeme
#   libpq-dev, for using changeme
#   net-tools, for using ifconfig
#   expect, for the timeout function
#   dnsutils, for installing dig
#   ngrep, for smb version check on target
#   libssl-dev, for installing rdpscan for bluekeep, cve-2019-0708, scanning
RUN apt-gfet -y update && apt-get install -y \
    build-essential \
    gcc \
    curl \
    make \
    sudo \
    dnsrecon \
    git \
    iputils-ping \
    dnsutils \
    vim \
    bash \
    sqlite3 \
    nmap \
    python \
    python-pip \
    python3\
    python3-pip \
    ftp \
    amass \
    whois \
    psmisc \
    procps \
    netcat-traditional \
    default-mysql-client \
    exploitdb \
    whatweb \
    wafw00f \
    wget \
    dirb \
    gobuster \
    cewl \
    automake \
    libtool \
    man-db \
    wpscan \
    apt-utils \
    npm \
    unixodbc-dev \
    libpq-dev \
    unzip \
    python3-html2text \
    net-tools \
    golang \
    cadaver \
    davtest \
    expect \
    hydra \
    smtp-user-enum \
    nbtscan \
    enum4linux \
    smbclient \
    python3-impacket \
    tcpdump \
    rpcbind \
    nis \
    cifs-utils \
    slowhttptest \
    metasploit-framework \
    ngrep \
    smbmap \
    libssl-dev \
    rdesktop

# Update PATH variable in ~/.bashrc
RUN echo -e 'export GOPATH=$PATH:/root/go' >> /root/.bashrc && \
    echo -e 'export GOBIN=$GOPATH/bin' >> /root/.bashrc && \
    echo -e 'export PATH=$PATH:$GOBIN' >> /root/.bashrc && \
    source /root/.bashrc

# Get golang based projects
RUN git clone https://github.com/manasmbellani/goportscan /opt/goportscan && \
    go get -u github.com/manasmbellani/goportscan && \
    go get -u github.com/manasmbellani/goregexassets && \
    go get -u github.com/manasmbellani/gocmdscanner && \
    go get -u github.com/manasmbellani/goresolvehosts

# Get nuclei for vulnerability scanning
go get -u github.com/projectdiscovery/nuclei/cmd/nuclei

# installing pip packages via python2
RUN python2 -m pip install pyslowloris

# installing pip packages via python3
RUN python3 -m pip install pip \
                            webtech \
                            virtualenv \
                            pyyaml \
                            colorama \
                            requests \
                            termcolor \
                            colorlog \
                            pyopenssl

# Install BlueGate
RUN git clone https://github.com/ollypwn/BlueGate /opt/BlueGate

# Installing sslyze
RUN git clone https://github.com/nabla-c0d3/sslyze /opt/sslyze && \
    cd /opt/sslyze && \
    python3 setup.py install

# Install CMSMap on the docker instance
RUN git clone https://github.com/Dionach/CMSmap /opt/CMSmap && \
    cd /opt/CMSmap && \
    python3 setup.py install

# Install kit for taking images e.g. imgkit and wkhtmltopdf
RUN sudo apt-get -y install wkhtmltopdf
RUN python3 -m pip install imgkit

# Install my custom directory busting tool
RUN git clone https://github.com/manasmbellani/athena-mydirbuster /opt/athena-mydirbuster && \
    cd /opt/athena-mydirbuster && \
    python3 -m pip install -r requirements.txt
    
# Install dirsearch
RUN git clone https://github.com/maurosoria/dirsearch /opt/dirsearch

# Install hakrawler for crawling websites
RUN go get github.com/hakluke/hakrawler

# Install honeypot checker
RUN git clone https://www.github.com/honeynet/checkpot.git /opt/checkpot && \
    sudo apt-get -y install mercurial && \
    cd /opt/checkpot && \
    python3 -m pip install -r requirements.txt

# installing changeme
RUN git clone https://github.com/ztgrace/changeme /opt/changeme && \
    cd /opt/changeme && \
    python -m pip install -r requirements.txt

# installing testssl.sh
RUN git clone https://github.com/drwetter/testssl.sh /opt/testssl.sh 

# installing heartbleed
RUN git clone https://github.com/musalbas/heartbleed-masstest /opt/heartbleed-masstest

# installing xsstrike
RUN git clone https://github.com/s0md3v/XSStrike /opt/XSStrike && cd /opt/XSStrike && python3 -m pip install -r requirements.txt

# installing Linkfinder
RUN git clone https://github.com/GerbenJavado/LinkFinder /opt/LinkFinder && \
    cd /opt/LinkFinder && \
    python3 setup.py install

# Installing waybackrobots
RUN git clone https://gist.github.com/mhmdiaa/2742c5e147d49a804b408bfed3d32d07 /opt/waybackrobots.py

# installing waybackurls
RUN mkdir /opt/waybackurls && curl -s -k https://gist.githubusercontent.com/mhmdiaa/adf6bff70142e5091792841d4b372050/raw/waybackurls.py -o /opt/waybackurls/waybackurls.py

# Installing ssh-audit
RUN git clone https://github.com/arthepsy/ssh-audit /opt/ssh-audit

# Get the list of all Linux users
RUN mkdir /opt/linux_users_list && \
    wget https://gist.githubusercontent.com/manasmbellani/f79f18be52dd871634acbe53f8b168b5/raw/d1e2606084cdd542f01e73fe7708c83f1747bcde/linux_users_list.txt -O /opt/linux_users_list/linux_users_list.txt

# Getting the debian-ssh and extracting all the keys into a folder for brute-forcing
# Also removing any public keys
RUN cd /opt && \
    wget https://github.com/g0tmi1k/debian-ssh/archive/master.zip -O debian-ssh.zip && \
    yes n | unzip debian-ssh.zip && \
    rm -f debian-ssh.zip && \
    mv /opt/debian-ssh-master /opt/debian-ssh && \
    cd /opt/debian-ssh/common_keys && \
    bunzip2 debian_ssh_dsa_1024_x86.tar.bz2 && \
    tar xvf debian_ssh_dsa_1024_x86.tar && \ 
    bunzip2 debian_ssh_rsa_2048_x86.tar.bz2 && \
    tar xvf debian_ssh_rsa_2048_x86.tar && \
    rm debian_ssh_dsa_1024_x86.tar && \
    rm debian_ssh_rsa_2048_x86.tar && \
    cd /opt/debian-ssh/common_keys/dsa/1024 && \
    ls -1 *.pub | xargs -I [] rm [] && \
    cd /opt/debian-ssh/common_keys/rsa/2048 && \
    ls -1 *.pub | xargs -I [] rm []


# Getting wordlists via SecLists
RUN cd /opt && \
    wget -c https://github.com/danielmiessler/SecLists/archive/master.zip -O SecList.zip && \
    yes n | unzip SecList.zip && \
    rm -f SecList.zip && \
    mv /opt/SecLists-master /opt/SecLists

RUN git clone https://github.com/galkan/crowbar /opt/crowbar

# Getting wordlist for virtual-host-discovery 
RUN mkdir /opt/seclist-virtual-host-namelist && \
    wget https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/DNS/namelist.txt -O /opt/seclist-virtual-host-namelist/seclist-virtual-host-namelist.txt

# Getting the smbver.sh script
RUN mkdir /opt/recon_enum && \
    wget https://raw.githubusercontent.com/rewardone/OSCPRepo/master/scripts/recon_enum/smbver.sh -O /opt/recon_enum/smbver.sh && \
    chmod +x /opt/recon_enum/smbver.sh

# Install parameth
RUN git clone https://github.com/mak-/parameth /opt/parameth
WORKDIR /opt/parameth
RUN pip install -r requirements.txt

# Install SMTPTester
RUN git clone https://github.com/xFreed0m/SMTPTester /opt/SMTPTester && cd /opt/SMTPTester && python3 -m pip install -r requirements.txt

# Install Arjun
RUN git clone https://github.com/s0md3v/Arjun /opt/Arjun

# Install piescan
RUN git clone https://github.com/m57/piescan /opt/piescan

# Install golisermo
RUN sudo apt-get -y install python2.7 python2.7-dev python-pip python-docutils git perl nmap sslscan
RUN git clone https://github.com/golismero/golismero.git /opt/golismero && \
    cd /opt/golismero && \
    pip install -r requirements.txt && \
    pip install -r requirements_unix.txt && \
    ln -s /opt/golismero/golismero.py /usr/bin/golismero

# Install Photon for web-crawling
RUN git clone "https://github.com/s0md3v/Photon" /opt/Photon && \
    python3 -m pip install -r requirements.txt

# Install Gittools for dumping .git
RUN git clone "https://github.com/internetwache/GitTools" /opt/GitTools && cd /opt/GitTools/Finder && python3 -m pip install -r requirements.txt

# Install Bl4de wordlist for directory searching
RUN mkdir /opt/bl4de && curl -s -k https://raw.githubusercontent.com/bl4de/dictionaries/master/starter.txt -o /opt/bl4de/starter.txt

# Install the .vimrc file
RUN curl -L -s -k https://gist.githubusercontent.com/manasmbellani/9b9e6ab12510ccaa82aa31650a804a9d/raw/8787db0d170dd862ea23926ac61d9905bc1cf873/vimrc -o /root/.vimrc

# Install github.com/fatal0/tomcat-cve-2020-1938-check for checking for CVE-2019-1938 
RUN go get -u github.com/fatal0/tomcat-cve-2020-1938-check

# Instlling dirscraper
RUN git clone https://github.com/Cillian-Collins/dirscraper /opt/dirscraper && \
    python3 -m pip install -r requirements.txt

# Install meg for directory brute-forcing
RUN go get -u https://github.com/tomnomnom/meg

# Upgrade npm version
RUN npm i npm@latest -g

# Install is-website-vulnerable
RUN npm install -g is-website-vulnerable

# Starting metasploit framework and configuring the database
RUN service postgresql start && \
    msfdb init

# Get Bluekeep scanner called rdpscan (CVE-2019-0708)
RUN git clone https://github.com/robertdavidgraham/rdpscan /opt/rdpscan && \
    cd /opt/rdpscan && \
    make

# Install checker for cve-2019-2725 and change the payload location + the timeout
RUN git clone https://github.com/lasensio/cve-2019-2725 /opt/cve-2019-2725 && \
    sed -i "s/http:\/\/.*\.txt/https:\/\/www.google.com\/robots.txt/g" /opt/cve-2019-2725/cve-2019-2725-poc.py && \
    sed -i "s/data=payload)/data=payload, timeout=10)/g" /opt/cve-2019-2725/cve-2019-2725-poc.py

# Install AWS Cloud-Security-Research for s3_bucket_bruteforcer
RUN git clone https://github.com/RhinoSecurityLabs/Cloud-Security-Research /opt/Cloud-Security-Research && \
    cd /opt/Cloud-Security-Research/AWS/s3_bucket_bruteforce && \
    chmod +x setup.sh && \
    ./setup.sh

# Install S3scanner for brute-forcing websites that are S3 buckets                                  
RUN git clone https://github.com/sa7mon/S3Scanner.git /opt/S3Scanner && \                                          
    cd /opt/S3Scanner && \                                                                          
    python3 -m pip install -r requirements.txt 

# Install subjack for dangling dns/subdomain takeover
RUN go get github.com/haccer/subjack

# Install subtocheck for dangling dns/subdomain takeover
RUN mkdir /opt/subtocheck && \
    cd /opt/subtocheck && \
    wget https://github.com/jonhadfield/subtocheck/releases/download/0.0.3/subtocheck_linux_amd64 && \
    chmod +x subtocheck_linux_amd64

# Clone rdg_scanner_cve-2020-0609 to scan for CVE-2020-0609
RUN git clone https://github.com/2d4d/rdg_scanner_cve-2020-0609 /opt/rdg_scanner_cve-2020-0609

# Clone RDGScanner
RUN git clone https://github.com/MalwareTech/RDGScanner /opt/RDGScanner

# Run subdomain takeover and other checks that I have created
RUN git clone https://github.com/manasmbellani/athena-tools /opt/athena-tools

# Install Jexboss for scanning for Java vulnerabilities
RUN git clone https://github.com/joaomatosf/jexboss /opt/jexboss &&  \
    cd /opt/jexboss && \
    pip install -r requires.txt

# Install the important Go binaries
WORKDIR /opt/athena-tools